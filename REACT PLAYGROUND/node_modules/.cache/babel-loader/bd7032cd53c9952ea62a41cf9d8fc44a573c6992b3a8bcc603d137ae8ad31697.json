{"ast":null,"code":"var _jsxFileName = \"/Users/logannitzsche/Documents/GitHub/SpellCheckWeb/spell-checker/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\"; // Assuming you have styles.css as App.css\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [word, setWord] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n\n  // Handle fetching dictionary data\n  useEffect(() => {\n    fetch(\"dictionary.txt\").then(response => response.text()).then(data => {\n      const dictionary = data.split(\"\\n\").map(word => word.toLowerCase().trim());\n      const checkWord = () => {\n        const userInput = word.toLowerCase().trim();\n        if (userInput === \"\") return;\n        const suggestedWords = spellCheck(userInput, dictionary);\n        setSuggestions(suggestedWords);\n      };\n\n      // Attach checkWord to button click\n      document.getElementById(\"check-button\").onclick = checkWord;\n    });\n  }, [word]);\n\n  // Function to check spelling (you already had this)\n  const spellCheck = (input, dictionary) => {\n    const suggestions = [];\n    dictionary.forEach(dictWord => {\n      const penalty = calculateAlignmentPenalty(input, dictWord);\n      suggestions.push({\n        word: dictWord,\n        penalty\n      });\n    });\n    suggestions.sort((a, b) => a.penalty - b.penalty);\n    return suggestions.slice(0, 10).map(item => item.word);\n  };\n\n  // Function to calculate alignment penalty (Levenshtein-like)\n  const calculateAlignmentPenalty = (a, b) => {\n    const lenA = a.length;\n    const lenB = b.length;\n    const costArray = Array.from({\n      length: lenA + 1\n    }, () => Array(lenB + 1).fill(0));\n    for (let i = 0; i <= lenA; i++) costArray[i][0] = i;\n    for (let j = 0; j <= lenB; j++) costArray[0][j] = j;\n    for (let i = 1; i <= lenA; i++) {\n      for (let j = 1; j <= lenB; j++) {\n        const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n        costArray[i][j] = Math.min(costArray[i - 1][j - 1] + cost, costArray[i - 1][j] + 2, costArray[i][j - 1] + 2);\n      }\n    }\n    return costArray[lenA][lenB];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Word Analyzer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"copyright\",\n        children: [\"\\xA9 \", currentYear, \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://logannitzsche.com\",\n          children: \"Logan Nitzsche\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Enter Word:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: word,\n        onChange: e => setWord(e.target.value),\n        placeholder: \"Type a word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"check-button\",\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Suggestions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(Suggestion, {\n          word: suggestion\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Djgl2U/8fa75YLiCFptNzX0Q5l0=\");\n_c = App;\nconst Suggestion = ({\n  word\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    style: {\n      listStyleType: \"none\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      children: word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        marginLeft: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://www.dictionary.com/browse/${word}`,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Dictionary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), \" \", \"|\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://www.thesaurus.com/browse/${word}`,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Thesaurus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), \" \", \"|\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://www.rhymezone.com/r/rhyme.cgi?Word=${word}&typeofrhyme=perfect&org1=syl&org2=l&org3=y`,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Rhyme Zone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), \" \", \"|\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://trends.google.com/trends/explore?date=now%201-d&geo=US&q=${word}&hl=en`,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Google Trends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Suggestion;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Suggestion\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","word","setWord","suggestions","setSuggestions","currentYear","setCurrentYear","Date","getFullYear","fetch","then","response","text","data","dictionary","split","map","toLowerCase","trim","checkWord","userInput","suggestedWords","spellCheck","document","getElementById","onclick","input","forEach","dictWord","penalty","calculateAlignmentPenalty","push","sort","a","b","slice","item","lenA","length","lenB","costArray","Array","from","fill","i","j","cost","Math","min","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","type","value","onChange","e","target","placeholder","id","suggestion","index","Suggestion","_c","style","listStyleType","fontWeight","marginLeft","rel","_c2","$RefreshReg$"],"sources":["/Users/logannitzsche/Documents/GitHub/SpellCheckWeb/spell-checker/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";  // Assuming you have styles.css as App.css\n\nconst App = () => {\n  const [word, setWord] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n\n  // Handle fetching dictionary data\n  useEffect(() => {\n    fetch(\"dictionary.txt\")\n      .then((response) => response.text())\n      .then((data) => {\n        const dictionary = data.split(\"\\n\").map((word) => word.toLowerCase().trim());\n\n        const checkWord = () => {\n          const userInput = word.toLowerCase().trim();\n          if (userInput === \"\") return;\n\n          const suggestedWords = spellCheck(userInput, dictionary);\n          setSuggestions(suggestedWords);\n        };\n\n        // Attach checkWord to button click\n        document.getElementById(\"check-button\").onclick = checkWord;\n      });\n  }, [word]);\n\n  // Function to check spelling (you already had this)\n  const spellCheck = (input, dictionary) => {\n    const suggestions = [];\n    dictionary.forEach((dictWord) => {\n      const penalty = calculateAlignmentPenalty(input, dictWord);\n      suggestions.push({ word: dictWord, penalty });\n    });\n    suggestions.sort((a, b) => a.penalty - b.penalty);\n    return suggestions.slice(0, 10).map((item) => item.word);\n  };\n\n  // Function to calculate alignment penalty (Levenshtein-like)\n  const calculateAlignmentPenalty = (a, b) => {\n    const lenA = a.length;\n    const lenB = b.length;\n    const costArray = Array.from({ length: lenA + 1 }, () => Array(lenB + 1).fill(0));\n\n    for (let i = 0; i <= lenA; i++) costArray[i][0] = i;\n    for (let j = 0; j <= lenB; j++) costArray[0][j] = j;\n\n    for (let i = 1; i <= lenA; i++) {\n      for (let j = 1; j <= lenB; j++) {\n        const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n        costArray[i][j] = Math.min(\n          costArray[i - 1][j - 1] + cost,\n          costArray[i - 1][j] + 2,\n          costArray[i][j - 1] + 2\n        );\n      }\n    }\n\n    return costArray[lenA][lenB];\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Word Analyzer</h1>\n        <div className=\"copyright\">\n          &copy; {currentYear} <a href=\"https://logannitzsche.com\">Logan Nitzsche</a>\n        </div>\n      </header>\n\n      <div className=\"input-container\">\n        <h4>Enter Word:</h4>\n        <input\n          type=\"text\"\n          value={word}\n          onChange={(e) => setWord(e.target.value)}\n          placeholder=\"Type a word\"\n        />\n        <button id=\"check-button\">Check</button>\n      </div>\n\n      <div className=\"suggestions\">\n        <h2>Suggestions:</h2>\n        <ul>\n          {suggestions.map((suggestion, index) => (\n            <Suggestion key={index} word={suggestion} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst Suggestion = ({ word }) => {\n  return (\n    <li style={{ listStyleType: \"none\" }}>\n      <span style={{ fontWeight: \"bold\" }}>{word}</span>\n      <span style={{ marginLeft: \"10px\" }}>\n        <a href={`https://www.dictionary.com/browse/${word}`} target=\"_blank\" rel=\"noopener noreferrer\">\n          Dictionary\n        </a>{\" \"}\n        |{\" \"}\n        <a href={`https://www.thesaurus.com/browse/${word}`} target=\"_blank\" rel=\"noopener noreferrer\">\n          Thesaurus\n        </a>{\" \"}\n        |{\" \"}\n        <a\n          href={`https://www.rhymezone.com/r/rhyme.cgi?Word=${word}&typeofrhyme=perfect&org1=syl&org2=l&org3=y`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Rhyme Zone\n        </a>{\" \"}\n        |{\" \"}\n        <a\n          href={`https://trends.google.com/trends/explore?date=now%201-d&geo=US&q=${word}&hl=en`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Google Trends\n        </a>\n      </span>\n    </li>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}